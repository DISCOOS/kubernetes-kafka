

kafka:
  ## kafka.imageRegistry is the address of the container image registry to use
  # imageRegistry: docker.io
  ## kafka.pullPolicy is the kubernetes policy to use for pulling images: Always, IfNotPresent, Never
  pullPolicy: IfNotPresent
  ## kafka.image is the name of kafka container image to use
  image: nbogojevic/kafka
  ## kafka.tag is the tag of kafka container image to use
  tag: latest
  ## kafka.serviceName is the service name used by clients to find the cluster
  serviceName: kafka
  ## kafka.headlessService is the name of headless service used by StatefulSet 
  headlessService: broker
  ## serverName is the name used by StatefulSet to identify instances
  serverName: kafka
  ## kafka.nodes is set to number of nodes in kafka cluster
  nodes: 3
  ## The replication factor for the offsets, set higher to ensure availability (default 3).
  ## Internal topic creation will fail until the cluster size meets this replication factor requirement (must be equal or less than nodes).
  offsetsTopicReplicationFactor: 3
  ## The replication factor for the transaction topic, set higher to ensure availability (default is 3).
  ## Internal topic creation will fail until the cluster size meets this replication factor requirement (must be equal or less than nodes).
  transactionStateLogReplicationFactor: 3
  ## When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write
  ## for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception
  ## (either NotEnoughReplicas or NotEnoughReplicasAfterAppend). When used together, min.insync.replicas and acks allow you to enforce greater
  ## durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min.insync.replicas to 2, and
  ## produce with acks of "all". This will ensure that the producer raises an exception if a majority of replicas do not receive a write.
  minInsyncReplicas: 1
  ## Overridden min.insync.replicas config for the transaction topic (default is 2). Must be equal or less than nodes.
  transactionStateLogMinIsr: 2
  ## kafka.jvmFlags are default java options to use with kafka, can be as low as -Xmx32M -Xms32M for systems with limited resources and low throughput
  jvmFlags: -Xmx1G -Xms1G
  ## kafka.storageSize is the default size of storage when using persistent volumes
  storageSize: 2GiB
  ## kafka.persistent is set to true to use persitent volumes
  persistent: false
  ## secured is set to true if clients must authenticate. Only supports plaintext SASL mechanism.
  secured: true
  ## set to true if communication with kafka should be encrypted. TODO certificate management
  # tls: false
  ## Set to true if topics can be deleted.
  deleteTopicEnable: true
  ## The total memory used for log deduplication across all cleaner threads (134MB is default), can be as low as 12000000 (12Mb) for systems with limited resources and low throughput
  logCleanerDedupeBufferSize: 134217728
  ## Then name of the admin user. If not specified a random name is generated.
  #adminUser: admin
  ## Then name of the admin password. If not specified a random password is generated.
  #adminPassword: secret-password
  ## zookeeperServic the name of zookeper service to use
  zookeeperService: zookeeper
  ## zookeperTimeout Default timeout in ms when connecting to zookeeper
  zookeperTimeout: 6000
  ## usernamePoolSize number of predefined users for topic access
  usernamePoolSize: 50
  ## kafka.nodeSelector can be set with node labels to use when choosing nodes to deploy
  nodeSelector:

zookeeper:
  ## zookeeper.imageRegistry is the address of the container image registry to use
  # imageRegistry: docker.io
  ## kafka.pullPolicy is the kubernetes policy to use for pulling images: Always, IfNotPresent, Never
  pullPolicy: IfNotPresent
  ## zookeeper.image is the name of zookeeper container image to use
  image: nbogojevic/zookeeper
  ## zookeeper.tag is the tag of zookeeper container image to use
  tag: latest
  ## zookeeper.serviceName is the service name used by clients to find the cluster
  serviceName: zookeeper
  ## zookeeper.headlessService is the name used by StatefulSet to identify instances
  headlessService: zoo
  ## serverName is the name used by StatefulSet to identify instances
  serverName: zoo
  ## zookeeper.nodes is set to number of nodes in zookeeper cluster
  nodes: 3 
  ## zookeeper.jvmFlags are default java options to use with zookeeper, can be as low as -Xmx4M -Xms4M for systems with limited resources and low throughput
  jvmFlags: -Xmx512m
  ## zookeeper.nodeSelector can be set with node labels to use when choosing nodes to deploy
  nodeSelector:     

kafka-operator:
  ## enabled is set to true if kafka-operator should be deployed
  enabled: true
  ## image is the name of kafka-operator container image to use
  image: nbogojevic/kafka-operator
  ## pullPolicy is the kubernetes policy to use for pulling images: Always, IfNotPresent, Never
  pullPolicy: IfNotPresent
  ## tag is the tag of kafka container image to use
  tag: latest
  ## bootstrap is the service name used by discover kafka cluster
  bootstrapServer: kafka:9092
  ## logLevel is the log level to set for kafka-operator
  logLevel: INFO
  ## deleteTopics is set to true if operator can delete kafka topics
  deleteTopics: true
  ## importTopics is set to true if operator should take ownership of all existing kafka topics
  importTopics: true
  ## manageAcl is set to true if operator should manage topic ACL
  manageAcl: true
  ## secured is set to true if operator must authenticate. Only supports plaintext SASL mechanism.
  secured: true
  ## jvmFlags are default java options to use with operator
  jvmFlags: -Xmx128M

global:
  ## applicationName is the default name of the application
  applicationName: kafka-cluster

  ## hawkular is set to true to enable hawkular metrics
  hawkular: false   

  ## prometheus is set to true to enable prometheus metrics
  prometheus: true

  ## jolokia is set to true if jolokia JMX endpoint should be exposed
  jolokia: true

  ## jolokiaUsername is set to the name of jolokia user for basic authentication
  jolokiaUsername: jolokia

  ## jolokiaPassword can be set to the password to use. If not specified, a random password is generated
  jolokiaPassword: jolokiapwd
  
